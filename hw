// a calculator to perform addition, subtraction, multiplication and division for two number, and calculate n! for given a number n.
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h> // printf, scanf definition
#include <stdlib.h> // system pause definition

int run(void); // ask choice for what to execute
int fact(int n); // factorial of a number
double add(double a, double b); // addition
double sub(double a, double b); // subtraction
double mul(double a, double b); // multiplication
double div(double a, double b); // division
int n, // the number to be factorial
fac = 1; // the factorial result
double a, b; // two numbers to be calculate

int main(void) {
	run();

	system("pause");
	return 0;
}

int run(void) {
	char choice; // user's choices for the action
	n = 1;
	printf("1: Addition \n2: Subtraction \n3: Mutiplication \n4: Division \n5: Factorial \n6: Quit \nEnter the choice => ");
	scanf("\r");
	scanf("%c", &choice);
	switch (choice) {
	case '1':
		printf("Enter two numbers => ");
		scanf("%lf, %lf", &a, &b);
		printf("Sum => %.2lf", add(a, b));
		break;
	case '2':
		printf("Enter two numbers => ");
		scanf("%lf, %lf", &a, &b);
		printf("Difference => %.2lf", sub(a, b));
		break;
	case '3':
		printf("Enter two numbers => ");
		scanf("%lf, %lf", &a, &b);
		printf("Product => %.2lf", mul(a, b));
		break;
	case '4':
		printf("Enter two numbers => ");
		scanf("%lf, %lf", &a, &b);
		printf("Quotient => %.2lf", div(a, b));
		break;
	case '5':
		printf("Enter a number => ");
		scanf("%d", &n);
		if (fact(n) == -1) printf("Invaild Number.");
		else printf("Result => %d", fact(n));

		break;
	case '6':
		return 0; // stop the program
	default:
		printf("Invaild choice!");
	}
	printf("\n");
	fac = 1; // reset factorial result
	a = b = 0; // reset the two numbers
	run();
}

int fact(int n) {
	if (n < 0) return -1;
	else if (n == 0) return 1;
	else if (n == 1) return fac;
	else {
		fac *= n;
		n--;
		fact(n); // use recursion to caculate factorial
	}
}

double add(double a, double b) {
	return (a + b);
}
double sub(double a, double b) {
	return (a - b);
}
double mul(double a, double b) {
	return (a * b);
}
double div(double a, double b) {
	return (a / b);
}
